{"name":"API Documentation Changes","tagline":"my import·io hackathon participation","body":"# Description\r\n\r\nThis *hack* will automatically find changes in the documentation of thousands of different APIs and generate alerts of those changes as they happen.\r\n\r\n# How does it work?\r\n\r\nThe [Mashape](http://mashape.com) API Marketplace [Public API Directory](http://publicapis.com/) is periodically crawled by two [import·io](http://import.io/) [crawlers](http://support.import.io/knowledgebase/articles/247570-create-a-crawler):\r\n\r\n1. the first crawler grabs the URL of each API available on the list;\r\n2. the second crawler reads each API page and grabs the following information:\r\n    * the API *title*;\r\n    * the API *logo*;\r\n    * the API *description*;\r\n    * the API *documentation URL*.\r\n\r\nThen, a [nodejs](http://nodejs.org/) script iterates through the results of the first crawler and, for each API found, it calls the second crawler.\r\n\r\nIt then makes a GET HTTP request to the obtained API *documentation URL*, hashes the result using the [SHA1](http://en.wikipedia.org/wiki/SHA-1) algorithm and stores the result on a file.\r\n\r\nThe second time the script runs, it compares the generated hash with the one saved previously. If both hashes are different it means that the documentation changed and an alert is emitted.\r\n\r\n# Why did I do it?\r\n\r\nBecause I'd like to see how API documentation changes over time and I figured that monitoring a large number of sources would give me a pretty good idea.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}